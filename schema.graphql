# Global
type BentoBox @entity {
  # Contract ID
  id: ID!
  lendingPairs: [LendingPair!]! @derivedFrom(field: "bentoBox")
  tokens: [Token!] @derivedFrom(field: "bentoBox")
  WethToken: Bytes!
  withdrawals: [Withdrawal!] @derivedFrom(field: "bentoBox")
  deposits: [Deposit!] @derivedFrom(field: "bentoBox")
  lendingPairsCount: BigInt!
}

type Deposit @entity {
  id: ID!
  bentoBox: BentoBox!
  from: User!
  to: User!
  token: Token!
  amount: BigInt!
  block: BigInt!
  timestamp: BigInt!
}



type Withdrawal @entity {
  id: ID!
  bentoBox: BentoBox!
  from: User!
  to: User!
  token: Token!
  amount: BigInt!
  block: BigInt!
  timestamp: BigInt!
}

type Token @entity {
  id: ID!
  bentoBox: BentoBox!
  totalSupply: BigInt!
  name: String!
  symbol: String!
  decimals: BigInt!
  block: BigInt!
  timestamp: BigInt!
}

type User @entity {
  id: ID!
  lendingPairs: [UserLendingPairData!] @derivedFrom(field: "owner")
  bentoData: [UserBentoTokenData!] @derivedFrom(field: "owner")
  masterContractApprovals: [MasterContractApproval!] @derivedFrom(field: "owner")
  withdrawals: [Withdrawal!] @derivedFrom(field: "from")
  deposits: [Deposit!] @derivedFrom(field: "to")
  block: BigInt!
  timestamp: BigInt!
}

type UserBentoTokenData @entity {
  # concatenate UserAddress with TokenAddress
  id: ID!
  owner: User!
  token: Token!
  amount: BigInt!
}

type MasterContractApproval @entity {
  # concatenate UserAddress with MasterContract
  id: ID!
  owner: User!
  approved: Boolean!
}

enum PairTransactionType {
  assetTx
  collateralTx
  borrowTx
}

type PairTx @entity {
    id: ID!
    type: PairTransactionType!
    lendingPair: LendingPair!
    token: Token!
    root: UserLendingPairData!
    amount: BigInt!
    fraction: BigInt
    poolPercentage: BigInt!
    block: BigInt!
    timestamp: BigInt!
}

type UserLendingPairData @entity {
  # concatenate UserAddress with LendingPairAddress
  id: ID!
  lendingPair: LendingPair!
  owner: User!
  userCollateralAmount: BigInt!
  balanceOf: BigInt!
  userBorrowFraction: BigInt!
  transactions: [PairTx!] @derivedFrom(field: "root")
}

type LendingPair @entity {
  id: ID!
  asset: Token!
  bentoBox: BentoBox!
  collateral: Token!
  decimals: Int!
  dev: Bytes
  exchangeRate: BigInt!
  feeTo: Bytes!
  feesPendingAmount: BigInt!
  interestPerBlock: BigInt!
  lastBlockAccrued: BigInt!
  masterContract: Bytes!
  name: String!
  oracle: Bytes!
  owner: Bytes!
  pendingOwner: Bytes!
  protocolFee: BigInt!
  symbol: String!
  totalAssetAmount: BigInt!
  totalAssetFraction: BigInt!
  totalBorrowFraction: BigInt!
  totalBorrowAmount: BigInt!
  totalCollateralAmount: BigInt!
  utilization: BigInt!
  block: BigInt!
  timestamp: BigInt!
  transactions: [PairTx!] @derivedFrom(field: "lendingPair")
}
